name: Cloudbase-Init functional tests

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      max-parallel: 80
      matrix:
        python-version: ["3.10","3.11"]
        architecture: [x64]
        cloud: [openstack,cloudstack,ovf,empty,vmwareguest,nocloud]

    steps:
    - name: Checkout cloudbase-init master repo
      uses: actions/checkout@v3
      with:
        repository: ader1990/cloudbase-init-1
        ref: luqmana_tests
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Download external dependencies
      shell: powershell
      run: |
        .\scripts\download_external_deps.ps1 -cloud matrix.cloud
    - name: Install local dependencies
      shell: powershell
      run: |
        try {
            python -W ignore -m pip install --upgrade pip 2>&1 | %{ "$_" }
        } catch {}
        try {
            python -W ignore -m pip install -c https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt -U --force-reinstall -r requirements.txt 2>&1 | %{ "$_" }
        } catch {}
        try {
            python -W ignore -m pip install . 2>&1 | %{ "$_" }
        } catch {}
        try {
            python -W ignore -m pip freeze 2>&1 | %{ "$_" }
        } catch {}
    - name: Run Cloudbase-Init
      shell: powershell
      run: |
        $Erroractionpreference = "Continue"
        Mount-DiskImage -ImagePath (Resolve-Path ./cloudbase-init-config-drive.iso) | Out-Null
        Mount-DiskImage -ImagePath (Resolve-Path ./cloudbase-init-config-drive-nocloud.iso) | Out-Null
        Get-PSDRIVE
        mkdir "./metadata" | Out-Null
        cp -recurse -force "$((Get-DiskImage (Resolve-Path './cloudbase-init-config-drive.iso') | Get-Volume).DriveLetter):\*" "./metadata";
        if (Test-path ".\metadata\openstack\latest\network_data.json.template") {
            (Get-Content ".\metadata\openstack\latest\network_data.json.template").Replace("REPLACE_MAC_ADDRESS", ((Get-NetAdapter Ethernet).macaddress).Replace("-",":")) | Set-Content ".\metadata\openstack\latest\network_data.json" -Encoding Ascii
        }
        Start-Process -FilePath python.exe -ArgumentList "-m http.server" -NoNewWindow -WorkingDirectory (Resolve-Path("./metadata")) 2>&1 >> http_server.log
        cd "cbs-test-res/${{ matrix.cloud }}/"
        try {
            & cmd /c "cloudbase-init.exe --noreset_service_password --config-file ./cloudbase-init.conf 2>&1" | Tee-Object -FilePath cloudbase-init.log
        } catch {}
        $errors = $(cat ./cloudbase-init.log | Where-Object {$_ -like "*error*"})
        $pluginExecution = $(cat ./cloudbase-init.log | Where-Object {$_ -like "*Plugins execution done*"})
        if ($errors -or !$pluginExecution) {
            exit 1
        }
